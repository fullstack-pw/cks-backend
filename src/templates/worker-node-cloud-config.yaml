#cloud-config
hostname: ${WORKER_VM_NAME}
manage_etc_hosts: false

runcmd:
  # Make sure kubelet is running
  - systemctl enable kubelet
  - systemctl start kubelet

  # Make sure control plane hostname is resolvable
  - echo "${CONTROL_PLANE_IP} ${CONTROL_PLANE_VM_NAME}" >> /etc/hosts
  - cat /etc/hosts

  # Wait for control plane to become available
  - until nc -z ${CONTROL_PLANE_ENDPOINT} 6443; do echo "Waiting for control plane ${CONTROL_PLANE_ENDPOINT}..."; sleep 10; done

  # Join the Kubernetes cluster
  - eval "$JOIN_COMMAND --ignore-preflight-errors=NumCPU,Mem"
  - echo "Kubernetes eval join command executed"
  - bash -c "${JOIN_COMMAND} --ignore-preflight-errors=NumCPU,Mem"
  - echo "Kubernetes bash -c join command executed"
  - chown -R suporte:suporte /home/suporte

  # Set up kubectl completion for suporte user
  - |
    # Generate kubectl completion and set it up for suporte user
    kubectl completion bash > /home/suporte/.kube/completion.bash.inc
    echo 'source /home/suporte/.kube/completion.bash.inc' >> /home/suporte/.bashrc
    chown suporte:suporte /home/suporte/.kube/completion.bash.inc
    chown suporte:suporte /home/suporte/.bashrc

  # Change default shell for suporte user
  - usermod -s /bin/bash suporte
  - echo 'alias k=kubectl' >> /home/suporte/.bashrc

  # Capture current network configuration from DHCP
  - |
    INTERFACE=$(ip route | grep default | awk '{print $5}' | head -n1)
    CURRENT_IP=$(ip addr show $INTERFACE | grep 'inet ' | awk '{print $2}' | cut -d'/' -f1)
    NETMASK=$(ip addr show $INTERFACE | grep 'inet ' | awk '{print $2}' | cut -d'/' -f2)
    GATEWAY=$(ip route | grep default | awk '{print $3}' | head -n1)
    DNS_SERVERS=$(grep '^nameserver' /etc/resolv.conf | awk '{print $2}' | head -n1)

    echo "Current network config: IP=$CURRENT_IP/$NETMASK, GW=$GATEWAY, DNS=$DNS_SERVERS"

    # Create static netplan configuration
    cat > /etc/netplan/01-static-config.yaml << EOF
    network:
      version: 2
      ethernets:
        $INTERFACE:
          dhcp4: false
          addresses:
            - $CURRENT_IP/$NETMASK
          gateway4: $GATEWAY
          nameservers:
            addresses:
              - $DNS_SERVERS
              - 8.8.8.8
    EOF

    # Apply the static configuration
    netplan apply
    echo "Static IP configuration applied: $CURRENT_IP"
